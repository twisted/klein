[tox]

envlist =
    lint, mypy
    coverage-py{37,38,39,310,311,py3}-tw{212,221,current,trunk}
    coverage_combine
    coverage_report
    docs, docs-linkcheck
    packaging

skip_missing_interpreters = {tty:True:False}


[default]

basepython = python3.11

deps =
    tw212: Twisted==21.2.0
    tw221: Twisted==22.1.0
    twcurrent: Twisted
    # See https://github.com/twisted/klein/issues/486
    twtrunk: --use-deprecated=legacy-resolver
    twtrunk: https://github.com/twisted/twisted/tarball/trunk#egg=Twisted

    -r requirements/tox-pin-base.txt
    {test,coverage}: -r requirements/tox-tests.txt

    coverage: {[testenv:coverage_report]deps}
    coverage: coverage_enable_subprocess

setenv =
    PY_MODULE=klein

    PYTHONPYCACHEPREFIX={envtmpdir}/pycache


##
# Default environment: unit tests
##

[testenv]

description = run tests

basepython =
    py: python

    py37: python3.7
    py38: python3.8
    py39: python3.9
    py310: python3.10
    py311: python3.11
    py312: python3.12
    pypy3: pypy3
    pypy38: pypy3.8
    pypy39: pypy3.9

deps = {[default]deps}

setenv =
    {[default]setenv}

    coverage: COVERAGE_PROCESS_START={toxinidir}/.coveragerc

    TRIAL_JOBS={env:TRIAL_JOBS:--jobs=2}

commands =
    # Run trial without coverage
    test: trial --random=0 {env:TRIAL_JOBS} --temp-directory="{envlogdir}/trial.d" {posargs:{env:PY_MODULE}}

    # Run trial with coverage
    # Notes:
    #  - Because we run tests in parallel, which uses multiple subprocesses,
    #      we need to drop in a .pth file that causes coverage to start when
    #      Python starts. See:
    #      https://coverage.readthedocs.io/en/coverage-5.5/subprocess.html
    #  - We use coverage in parallel mode, then combine here to get the results
    #      to get a unified result for the current test environment.
    #  - Use `tox -e coverage_report` to generate a report for all environments.
    coverage: coverage run "{envdir}/bin/trial" --random=0 {env:TRIAL_JOBS} --temp-directory="{envlogdir}/trial.d" {posargs:{env:PY_MODULE}}

##
# Lint
##

[testenv:lint]

description = run all linters

basepython = {[default]basepython}

usedevelop = true
skip_install = True

deps =
    -r requirements/pre-commit.txt

commands =
    pre-commit run {posargs:--all-files}


##
# Mypy static type checking
##

[testenv:mypy]

description = run Mypy (static type checker)

basepython = {[default]basepython}

usedevelop = true

deps =
    -r requirements/mypy.txt
    {[default]deps}

commands =
    mypy                                       \
        --cache-dir="{toxworkdir}/mypy_cache"  \
        {tty:--pretty:}                        \
        {posargs:release.py setup.py src}


##
# Coverage report
##

[testenv:coverage_combine]
commands = coverage combine
basepython={[default]basepython}
deps = coverage
depends =
    coverage-py{37,38,39,310,311,py3}-tw{212,221,current,trunk}


[testenv:coverage_report]

description = generate coverage report

depends =
    coverage-py{37,38,39,310,311,py3}-tw{1,2}{0,1,2,3,4,5,6,7,8,9}{0,1,2,3,4,5,6,7,8,9}
    coverage-py{37,38,39,310,311,py3}-tw{current,trunk}
    coverage_combine

basepython = {[default]basepython}

skip_install = True

deps =
    -r requirements/coverage.txt

setenv =
    {[default]setenv}

commands =
    - coverage xml
    - coverage report --skip-covered
    - coverage html


##
# Documentation
##

[testenv:docs]

description = build documentation

basepython = {[default]basepython}

deps =
    -r requirements/sphinx.txt

commands =
    sphinx-build                           \
        -b html -d "{envtmpdir}/doctrees"  \
        "{toxinidir}/docs"                 \
        "{toxinidir}/htmldocs"


[testenv:docs-auto]

description = build documentation and rebuild automatically

basepython = {[default]basepython}

deps =
    {[testenv:docs]deps}
    -r requirements/docs-auto.txt

commands =
    sphinx-autobuild                       \
        -b html -d "{envtmpdir}/doctrees"  \
        --host=localhost                   \
        "{toxinidir}/docs"                 \
        "{toxinidir}/htmldocs"


[testenv:apidocs]

basepython = {[testenv:docs]basepython}

deps =
    pydoctor>=20.12.1

commands =
    pydoctor                                               \
        --project-name=klein                               \
        --project-url="https://github.com/twisted/klein/"  \
        --project-base-dir="{toxinidir}"                   \
        --add-package="{toxinidir}/src/klein"              \
        --html-output="{toxinidir}/apidocs"                \
        --make-html


##
# Check for broken links in documentation
##

[testenv:docs-linkcheck]

description = check for broken links in documentation

basepython = {[testenv:docs]basepython}

deps =
    {[testenv:docs]deps}

commands =
    sphinx-build -b html -d "{envtmpdir}/doctrees" docs docs/_build/html
    sphinx-build -b linkcheck docs docs/_build/html


##
# Packaging
##

[testenv:packaging]

description = check for potential packaging problems

depends =
    coverage-py{37,38,39,310,311,py3}-tw{1,2}{0,1,2,3,4,5,6,7,8,9}{0,1,2,3,4,5,6,7,8,9}
    coverage-py{37,38,39,310,311,py3}-tw{current,trunk}

basepython = {[default]basepython}

skip_install = True

deps =
    -r requirements/packaging.txt

commands =
   pip wheel --wheel-dir "{envtmpdir}/dist" --no-deps {toxinidir}
   twine check "{envtmpdir}/dist/"*


##
# Print dependencies
##

[testenv:dependencies]

description = print dependencies

basepython = {[default]basepython}

recreate = true

deps =
    pipdeptree

commands =
    python -c 'print()'
    pip freeze --exclude="{env:PY_MODULE}" --exclude=pipdeptree

    python -c 'print()'
    pipdeptree


##
# Release
##

[testenv:release]

description = invoke tool to manage a release branch

basepython = {[default]basepython}

skip_install = True

deps =
    -r requirements/release.txt
passenv =
    SSH_AUTH_SOCK

commands =
    python "{toxinidir}/release.py" {posargs}
